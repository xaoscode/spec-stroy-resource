name: Create and publish a Docker image

on: [workflow_dispatch]

env:
    # Use docker.io for Docker Hub if empty
    REGISTRY: ghcr.io
    # github.repository as <account>/<repo>
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GH_PAT }}

            # Build and push API image
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=sha

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: ./apps/api
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            # Build and push Web image
            - name: Extract metadata for Web
              id: meta-web
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.WEB_IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=sha

            - name: Build and push Web image
              uses: docker/build-push-action@v6
              with:
                  context: ./apps/web
                  push: true
                  tags: ${{ steps.meta-web.outputs.tags }}
                  labels: ${{ steps.meta-web.outputs.labels }}
